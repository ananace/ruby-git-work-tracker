#!/usr/bin/env ruby
# frozen_string_literal: true

require 'git_work_tracker'
require 'optparse'
require 'thor'

Dir["#{ENV['HOME']}/Projects/**/.git"].each_entry do |dir|
  dir = dir.chomp '.git'
  puts dir

  begin
    repo = GitWorkTracker::Repository.new dir

    unpushed = repo.unpushed_branches
    unless unpushed.empty?
      puts 'Unpushed branches:'
      unpushed.each do |branch, commits|
        puts "- #{branch}, #{commits.size} commits."
      end
    end

    stale = repo.stale_branches
    unless stale.empty?
      puts 'Stale branches:'
      stale.each do |branch|
        puts "- #{branch} (last commit at #{branch.gcommit.date})"
      end
    end

    puts 'Has unstaged changes' if repo.changes?
    puts 'Working dir is dirty.' if repo.dirty?

    latest = repo.latest_commit
    puts "Last commit at #{latest.date}"
  rescue StandardError => e
    puts "Error: #{e}"
  end

  puts
end
